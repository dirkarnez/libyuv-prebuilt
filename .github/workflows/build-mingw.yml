name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: windows-latest
    env:
      libraryName: libyuv
      installationPath: libyuv-installation
      tagName: 111.0.5515.1
      mingwTargetZip: libyuv-${{ github.ref_name }}-mingw64-x86_64-posix-seh-rev0-8.1.0.zip
    steps:
      - name: git clone
        shell: cmd
        run: |
          cd /d C:\ &&^
          git clone --recursive https://chromium.googlesource.com/libyuv/libyuv &&^
          cd libyuv &&^
          git checkout origin/stable
            
#       - shell: cmd
#         run: |
#           curl https://storage.googleapis.com/chrome-infra/depot_tools.zip -L --output depot_tools.zip  &&^
#           7z.exe x depot_tools.zip -o"depot_tools"
          
#       - shell: cmd
#         run: |
#           curl https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-win.zip -L --output ninja-win.zip  &&^
#           7z.exe x ninja-win.zip -o"ninja-win"
          
      - name: curl x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
        shell: cmd
        run:  cd /d ${{ github.workspace }} && curl https://github.com/2641797006/c/blob/master/GCC-zip/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z?raw=true -L --output x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z && dir && 7z.exe x x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
        
      - name: curl cmake-3.24.0-windows-x86_64.zip
        shell: cmd
        run: cd /d ${{ github.workspace }} && curl https://github.com/Kitware/CMake/releases/download/v3.24.0/cmake-3.24.0-windows-x86_64.zip -L --output cmake-3.24.0-windows-x86_64.zip && dir && 7z.exe x cmake-3.24.0-windows-x86_64.zip
      
      - name: curl PortableGit-2.38.1-64-bit.7z.exe
        shell: cmd
        run: cd /d ${{ github.workspace }} && curl https://github.com/git-for-windows/git/releases/download/v2.38.1.windows.1/PortableGit-2.38.1-64-bit.7z.exe -L --output PortableGit-2.38.1-64-bit.7z.exe && dir && 7z.exe x PortableGit-2.38.1-64-bit.7z.exe -o"PortableGit-2.38.1-64-bit"
        
      - shell: cmd
        run: |
          curl https://github.com/dirkarnez/libjpeg-prebuilt/releases/download/v9e/libjpeg-v9e-mingw64-x86_64-posix-seh-rev0-8.1.0.zip -L --output libjpeg-v9e-mingw64-x86_64-posix-seh-rev0-8.1.0.zip &&^
          7z.exe x libjpeg-v9e-mingw64-x86_64-posix-seh-rev0-8.1.0.zip -o"libjpeg-v9e-mingw64-x86_64-posix-seh-rev0-8.1.0"
          
#       - name: curl python-3.7.9-amd64-portable.zip
#         shell: cmd
#         run: |
#           curl https://github.com/dirkarnez/python-portable/releases/download/v3.8.10/python-3.8.10-amd64-portable.zip -L --output python-3.8.10-amd64-portable.zip &&^
#           dir &&^
#           7z.exe x python-3.8.10-amd64-portable.zip -o"python-3.8.10-amd64-portable"

      - shell: cmd
        run: |
          cd /d "C:\libyuv" &&^
          dir &&^
          "${{ github.workspace }}\PortableGit-2.38.1-64-bit\usr\bin\sed.exe" -i "s/INSTALL[ \t]*([ \t]**PROGRAMS.*/yuvconvert[ \t]*DESTINATION[ \t]*bin[ \t]*).*/INSTALL ( TARGETS yuvconvert							DESTINATION bin )/g" CMakeLists.txt &&^
          type CMakeLists.txt
          
      - name: set PATH, check mingw version, cmake generate, build and install
        shell: cmd
        run: |
            set WORKSPACE=%~dp0
            set PATH=^
            C:\Windows\System32\WindowsPowerShell\v1.0;^
            ${{ github.workspace }}\mingw64;^
            ${{ github.workspace }}\mingw64\bin;^
            ${{ github.workspace }}\PortableGit-2.38.1-64-bit\bin;^
            ${{ github.workspace }}\cmake-3.24.0-windows-x86_64\bin;^
            ${{ github.workspace }}\python-3.8.10-amd64-portable;^
            ${{ github.workspace }}\python-3.8.10-amd64-portable\Scripts;
            gcc --version &&^
            cd /d "C:\libyuv" &&^
            cmake.exe -G "MinGW Makefiles" ^
            -DCMAKE_POLICY_DEFAULT_CMP0064=NEW ^
            -DCMAKE_POLICY_DEFAULT_CMP0074=NEW ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DJPEG_ROOT="%WORKSPACE:\=/%/libjpeg-v9e-mingw64-x86_64-posix-seh-rev0-8.1.0" ^
            -DCMAKE_INSTALL_PREFIX="cmake-build/${{ env.cmakeInstallationPath }}" -B./cmake-build &&^
            cd cmake-build && cmake --build . && cmake --install . 
            
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "/c/libyuv/cmake-build/${{ env.cmakeInstallationPath }}"
          filename: "${{ env.mingwTargetZip }}"
          
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "/c/libyuv/cmake-build/${{ env.cmakeInstallationPath }}/${{ env.mingwTargetZip }}"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
